{
    "docs": [
        {
            "location": "/README/", 
            "text": "Index\n\n\nOutlines for courses conducted by School of Devops.\n\n\nDevops\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nDecoding Devops\n\n\n1day\n\n\nOverview\n\n\n\n\n\n\nDevops for Devs - CI/CD Track\n\n\n2days\n\n\nFoundation\n\n\n\n\n\n\nDevops for Ops - Foundation\n\n\n2days\n\n\nFoundation\n\n\n\n\n\n\n\n\nChef\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nChef Fundamentals\n\n\n3days\n\n\nFoundation\n\n\n\n\n\n\nChef Fundamentals FT\n\n\n2days\n\n\nFast Track\n\n\n\n\n\n\nChef with AWS]\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\nChef and Cloud Integrations\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\nAdvanced Chef\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\n\n\nPuppet\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nPuppet Fundamentals\n\n\n3days\n\n\nFoundation\n\n\n\n\n\n\nPuppet Fundamentals Fast Track\n\n\n2days\n\n\nFast Track\n\n\n\n\n\n\nAdvanced Puppet\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\nDevice Management with Puppet\n\n\n 2days\n\n\nAdvance\n\n\n\n\n\n\nPuppet with AWS\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\nPuppet with Openstack\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\n\n\nDocker\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nDocker Fundamentals\n\n\n2days\n\n\nFoundation\n\n\n\n\n\n\nDocker Orchestration\n\n\n2days\n\n\n\n\n\n\n\n\nDeploying Micro Services with Docker\n\n\n2days\n\n\n\n\n\n\n\n\n\n\nAnsible\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nAnsible Fundamentals\n\n\n 3days\n\n\nFoundation\n\n\n\n\n\n\n\n\nAWS\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nAWS Sysops Foundation\n\n\n 3days\n\n\n\n\n\n\n\n\nAWS Architect Foundation\n\n\n3days\n\n\n\n\n\n\n\n\nAWS Devops Foundation\n\n\n2days\n\n\n\n\n\n\n\n\n\n\nLicense (CC-BY-NC-ND)\n\n\nCourse Outlines   \n by \nSchool of Devops\n is licensed under a \nCreative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License\n.", 
            "title": "Index"
        }, 
        {
            "location": "/README/#index", 
            "text": "Outlines for courses conducted by School of Devops.", 
            "title": "Index"
        }, 
        {
            "location": "/README/#devops", 
            "text": "Program  Duration  Type      Decoding Devops  1day  Overview    Devops for Devs - CI/CD Track  2days  Foundation    Devops for Ops - Foundation  2days  Foundation", 
            "title": "Devops"
        }, 
        {
            "location": "/README/#chef", 
            "text": "Program  Duration  Type      Chef Fundamentals  3days  Foundation    Chef Fundamentals FT  2days  Fast Track    Chef with AWS]  2days  Advance    Chef and Cloud Integrations  2days  Advance    Advanced Chef  2days  Advance", 
            "title": "Chef"
        }, 
        {
            "location": "/README/#puppet", 
            "text": "Program  Duration  Type      Puppet Fundamentals  3days  Foundation    Puppet Fundamentals Fast Track  2days  Fast Track    Advanced Puppet  2days  Advance    Device Management with Puppet   2days  Advance    Puppet with AWS  2days  Advance    Puppet with Openstack  2days  Advance", 
            "title": "Puppet"
        }, 
        {
            "location": "/README/#docker", 
            "text": "Program  Duration  Type      Docker Fundamentals  2days  Foundation    Docker Orchestration  2days     Deploying Micro Services with Docker  2days", 
            "title": "Docker"
        }, 
        {
            "location": "/README/#ansible", 
            "text": "Program  Duration  Type      Ansible Fundamentals   3days  Foundation", 
            "title": "Ansible"
        }, 
        {
            "location": "/README/#aws", 
            "text": "Program  Duration  Type      AWS Sysops Foundation   3days     AWS Architect Foundation  3days     AWS Devops Foundation  2days", 
            "title": "AWS"
        }, 
        {
            "location": "/README/#license-cc-by-nc-nd", 
            "text": "Course Outlines     by  School of Devops  is licensed under a  Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License .", 
            "title": "License (CC-BY-NC-ND)"
        }, 
        {
            "location": "/containers/docker-fundamentals/", 
            "text": "Docker  Fundamentals\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDuration\n\n\n2days\n\n\n\n\n\n\nDifficulty\n\n\nEasy\n\n\n\n\n\n\nLevel\n\n\nBeginner\n\n\n\n\n\n\n\n\nObjectives\n\n\nThis course  introduces participants to linux container,  docker and open container eco system . Its intended to  help  participants to get started using docker to build,  package  and run applications.\n\n\nWho is this for ?\n\n\nThis course is intended for anyone who is part of the software delivery process and would like to get started using docker in their workflows to build, ship and run applications with containers.\n\n\nThis includes developers, qa and ops  professionals alike who are part of the software delivery process either as part of developing applications, creating  tests or part of the ops team in charge of deploying applications or automation team which enables developers to create their workflows.  \n\n\nWhat will you do as part of this course ?\n\n\nAs part of this course you will,  \n\n\n\n\nLearn what linux containers are, what is docker and get an overview of  open container eco system.\n\n\nSetup a local docker development environment\n\n\nLaunch containers, publish ports and connect to the applications running inside containers\n\n\nLearn basic container operations and troubleshooting\n\n\nBuild docker images with best practices for  web application, create optimal dockerfiles\n\n\nLearn single host container networking and volumes primitives.\n\n\nLaunch multi container application stacks with interlinked application.\n\n\nCreate specifications for setting up automated development environments with Docker Compose\n\n\nGet a quick overview of Container Orchestration Engine (COE) functionality with Kubernetes/SWARM.\n\n\n\n\nWhat will you not learn ?\n\n\nSince this course is a beginner level, its not meant to cover advanced concepts such as,\n\n\n\n\nAdvanced Container Orchestration\n\n\nContainer Security\n\n\nLogging and Monitoring setup for container based systems\n\n\nMulti Host Networking/Overlay/CNI\n\n\nWriting Micro Services Applications\n\n\nCustomising Docker Installation and Setup\n\n\nProduction grade docker setup and deployment\n\n\nCustom registries, base images etc.\n\n\nCloud Integrations\n\n\nNetwork storage and persistence\n\n\n\n\nPre Requisites\n\n\nFollowing are the pre requisite skills to attend this course. Since its a beginner level course, no prior experience with linux containers is assumed.  \n\n\nSkills\n\n\n\n\nLinux/Unix Systems Fundamentals\n\n\nFamiliarity with Command Line Interface (CLI)\n\n\nFundamental knowledge of editors on linux (any one of vi/nano/emacs)\n\n\n\n\nHardware and Software  Requirements\n\n\nThese are the prerequisites for each attendee.\n\n\n\n\n\n\n\n\nHardware Requirements\n\n\nSoftware Requirements\n\n\n\n\n\n\n\n\n\n\nLaptop/Desktop with high speed internet connection\n\n\nBase Operating System : Windows / Mac OSX\n\n\n\n\n\n\n8 GB RAM\n\n\nDocker for Mac/Windows\n\n\n\n\n\n\n4 CPU Cores\n\n\nFor windows versions \n 10, Docker for Windows\n\n\n\n\n\n\n20 GB Disk Space available\n\n\nConeEmu (Windows Only)\n\n\n\n\n\n\n\n\nGit for Windows (windows only)\n\n\n\n\n\n\n\n\nSupporting Materials\n\n\nFollowing is the supporting material which will be provided to you before/during the course\n  * Slides (online)\n  * Workshop (online link)\n  * Video Course - Zero to Docker by School of Devops\n  * Reading List : Reference Material\n\n\nPre Class Checklist (Must)\n\n\nAll participants should have completed the following checklist before attending the course .\n\n\n\n\nWatch  \"Docker Mini Course\" videos. This covers the introduction to Docker and the theory related to containers, key features, advantages and workflow.\n\n\nVerify  your system meets the  hardware pre requisites.\n\n\nValidate the setup : verify all pre requisite software is installed on your system and is functional.\n\n\n\n\nTopics\n\n\nFollowing are the topics which would be covered as part of this course. Detailed course outline follows.\n\n\n\n\nCourse Introduction and Use Case\n\n\nPre-assesment  \n\n\nValidating Learning Environment\n\n\nLaunching and Operating Containers\n\n\nBuilding Docker Images\n\n\nDocker Networking\n\n\nDocker Storage\n\n\nLaunching Multi Container Apps with Compose\n\n\n\n\nDetailed Course Outline\n\n\nThis is the detailed course outline with day wise list of contents. \n\n\n\n\nIntroduction to Containers and Docker\n\n\nContainers vs Hypervisors\n\n\nEvolution of Containers\n\n\nDocker Story\n\n\nDocker Architecture\n\n\nUnder the hood\n\n\nNamespaces\n\n\nControl Groups\n\n\nUnion File System\n\n\nLibcontainer\n\n\n\n\n\n\n\n\nSetting up Learning Environment\n\n\n\n\n\n\nInstalling Prerequsites:-\n\n\n\n\nVirtualbox\n\n\nGIT For Windows\n\n\n\n\n\n\n\n\n\n\n\n\nInstalling Boot2docker\n\n\n\n\nInstalling Kinematic\n\n\nInstalling Docker Machine\n\n\nCreating Docker Hub Account\n\n\nValidating The Setup\n\n\nGetting Familiar with Docker\n\n\nUsing docker shell\n\n\nConnecting to docker daemon\n\n\nDocker Commands\n\n\nRunning Ephemeral Container\n\n\nRunningInteractive Containers\n\n\nRunning  Persistent Containers\n\n\n\n\nWorking with Containers\n\n\n\n\nLaunching a Application Container with an existing image\n\n\n\n\nContainer Operations\n\n\n\n\nRun\n\n\nInspect\n\n\nCheck Logs\n\n\nStop\n\n\nDelete\n\n\nAttach\n\n\nNetwork Port Mapping\n\n\n\n\n\n\n\n\nWorking with Images\n\n\n\n\nDocker Image Basics\n\n\nWorking with Docker Hub Registry\n\n\nImage Operations\n\n\n\n\n\n\n\n\nList\n\n\n\n\nSearch\n\n\nPull\n\n\n\n\n\n\n\n\n\n\n\n\nCustomising Image Manually\n\n\n\n\nCommitting Image to Docker Hub Registry\n\n\nBuilding Image Automatically with Dockerfile\n\n\nPrivate Docker Registry Overview\n\n\n\n\n\n\n\n\nDockerfile Primer\n\n\n\n\nDockerfile Basics\n\n\nDockerfile Anatomy\n\n\n\n\nDockerfile Instructions\n\n\n\n\n\n\nFROM\n\n\n\n\nMAINTAINER\n\n\nRUN\n\n\nLABEL\n\n\nENV\n\n\nADD\n\n\nCOPY\n\n\nEXPOSE\n\n\nVOLUME\n\n\nUSER\n\n\nWORKDIR\n\n\nONBUILD\n\n\nCMD\n\n\nENTRYPOINT\n\n\nConnecting Containers\n\n\nConnecting Containers with Network Port Mappings\n\n\nLinking System for Inter Container Communication\n\n\nDiscovery with environment variables\n\n\nAdvanced Docker Networking\n\n\nContainer Data Management\n\n\nManaging Data for Containers\n\n\nCreating Data Volumes\n\n\nUsing Data Volume Container\n\n\nLaunching Multi Container Apps with Compose\n\n\nDocker Compose Overview\n\n\nRunning Multi Container Apps\n\n\nUsing Compose\n\n\nCreating Multi Node Cluster with Swarm\n\n\nSwarm Overview\n\n\nClustering Nodes with Swarm\n\n\nDiscovery Services\n\n\nUsing Swarm to cluster docker hosts\n\n\nWorking with Docker Registry\n\n\nDocker Registry Types\n\n\nTrusted Registry vs Open Source Registry  \n\n\nConfiguring Security and TLS for Registry\n\n\nWorking with Local Registries\n\n\n\n\n\n\n\n\nDocker Eco System", 
            "title": "Docker  Fundamentals"
        }, 
        {
            "location": "/containers/docker-fundamentals/#docker-fundamentals", 
            "text": "Duration  2days    Difficulty  Easy    Level  Beginner", 
            "title": "Docker  Fundamentals"
        }, 
        {
            "location": "/containers/docker-fundamentals/#objectives", 
            "text": "This course  introduces participants to linux container,  docker and open container eco system . Its intended to  help  participants to get started using docker to build,  package  and run applications.", 
            "title": "Objectives"
        }, 
        {
            "location": "/containers/docker-fundamentals/#who-is-this-for", 
            "text": "This course is intended for anyone who is part of the software delivery process and would like to get started using docker in their workflows to build, ship and run applications with containers.  This includes developers, qa and ops  professionals alike who are part of the software delivery process either as part of developing applications, creating  tests or part of the ops team in charge of deploying applications or automation team which enables developers to create their workflows.", 
            "title": "Who is this for ?"
        }, 
        {
            "location": "/containers/docker-fundamentals/#what-will-you-do-as-part-of-this-course", 
            "text": "As part of this course you will,     Learn what linux containers are, what is docker and get an overview of  open container eco system.  Setup a local docker development environment  Launch containers, publish ports and connect to the applications running inside containers  Learn basic container operations and troubleshooting  Build docker images with best practices for  web application, create optimal dockerfiles  Learn single host container networking and volumes primitives.  Launch multi container application stacks with interlinked application.  Create specifications for setting up automated development environments with Docker Compose  Get a quick overview of Container Orchestration Engine (COE) functionality with Kubernetes/SWARM.", 
            "title": "What will you do as part of this course ?"
        }, 
        {
            "location": "/containers/docker-fundamentals/#what-will-you-not-learn", 
            "text": "Since this course is a beginner level, its not meant to cover advanced concepts such as,   Advanced Container Orchestration  Container Security  Logging and Monitoring setup for container based systems  Multi Host Networking/Overlay/CNI  Writing Micro Services Applications  Customising Docker Installation and Setup  Production grade docker setup and deployment  Custom registries, base images etc.  Cloud Integrations  Network storage and persistence", 
            "title": "What will you not learn ?"
        }, 
        {
            "location": "/containers/docker-fundamentals/#pre-requisites", 
            "text": "Following are the pre requisite skills to attend this course. Since its a beginner level course, no prior experience with linux containers is assumed.", 
            "title": "Pre Requisites"
        }, 
        {
            "location": "/containers/docker-fundamentals/#skills", 
            "text": "Linux/Unix Systems Fundamentals  Familiarity with Command Line Interface (CLI)  Fundamental knowledge of editors on linux (any one of vi/nano/emacs)", 
            "title": "Skills"
        }, 
        {
            "location": "/containers/docker-fundamentals/#hardware-and-software-requirements", 
            "text": "These are the prerequisites for each attendee.     Hardware Requirements  Software Requirements      Laptop/Desktop with high speed internet connection  Base Operating System : Windows / Mac OSX    8 GB RAM  Docker for Mac/Windows    4 CPU Cores  For windows versions   10, Docker for Windows    20 GB Disk Space available  ConeEmu (Windows Only)     Git for Windows (windows only)", 
            "title": "Hardware and Software  Requirements"
        }, 
        {
            "location": "/containers/docker-fundamentals/#supporting-materials", 
            "text": "Following is the supporting material which will be provided to you before/during the course\n  * Slides (online)\n  * Workshop (online link)\n  * Video Course - Zero to Docker by School of Devops\n  * Reading List : Reference Material", 
            "title": "Supporting Materials"
        }, 
        {
            "location": "/containers/docker-fundamentals/#pre-class-checklist-must", 
            "text": "All participants should have completed the following checklist before attending the course .   Watch  \"Docker Mini Course\" videos. This covers the introduction to Docker and the theory related to containers, key features, advantages and workflow.  Verify  your system meets the  hardware pre requisites.  Validate the setup : verify all pre requisite software is installed on your system and is functional.", 
            "title": "Pre Class Checklist (Must)"
        }, 
        {
            "location": "/containers/docker-fundamentals/#topics", 
            "text": "Following are the topics which would be covered as part of this course. Detailed course outline follows.   Course Introduction and Use Case  Pre-assesment    Validating Learning Environment  Launching and Operating Containers  Building Docker Images  Docker Networking  Docker Storage  Launching Multi Container Apps with Compose", 
            "title": "Topics"
        }, 
        {
            "location": "/containers/docker-fundamentals/#detailed-course-outline", 
            "text": "This is the detailed course outline with day wise list of contents.    Introduction to Containers and Docker  Containers vs Hypervisors  Evolution of Containers  Docker Story  Docker Architecture  Under the hood  Namespaces  Control Groups  Union File System  Libcontainer     Setting up Learning Environment    Installing Prerequsites:-   Virtualbox  GIT For Windows       Installing Boot2docker   Installing Kinematic  Installing Docker Machine  Creating Docker Hub Account  Validating The Setup  Getting Familiar with Docker  Using docker shell  Connecting to docker daemon  Docker Commands  Running Ephemeral Container  RunningInteractive Containers  Running  Persistent Containers   Working with Containers   Launching a Application Container with an existing image   Container Operations   Run  Inspect  Check Logs  Stop  Delete  Attach  Network Port Mapping     Working with Images   Docker Image Basics  Working with Docker Hub Registry  Image Operations     List   Search  Pull       Customising Image Manually   Committing Image to Docker Hub Registry  Building Image Automatically with Dockerfile  Private Docker Registry Overview     Dockerfile Primer   Dockerfile Basics  Dockerfile Anatomy   Dockerfile Instructions    FROM   MAINTAINER  RUN  LABEL  ENV  ADD  COPY  EXPOSE  VOLUME  USER  WORKDIR  ONBUILD  CMD  ENTRYPOINT  Connecting Containers  Connecting Containers with Network Port Mappings  Linking System for Inter Container Communication  Discovery with environment variables  Advanced Docker Networking  Container Data Management  Managing Data for Containers  Creating Data Volumes  Using Data Volume Container  Launching Multi Container Apps with Compose  Docker Compose Overview  Running Multi Container Apps  Using Compose  Creating Multi Node Cluster with Swarm  Swarm Overview  Clustering Nodes with Swarm  Discovery Services  Using Swarm to cluster docker hosts  Working with Docker Registry  Docker Registry Types  Trusted Registry vs Open Source Registry    Configuring Security and TLS for Registry  Working with Local Registries     Docker Eco System", 
            "title": "Detailed Course Outline"
        }
    ]
}