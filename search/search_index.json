{
    "docs": [
        {
            "location": "/README/", 
            "text": "Index\n\n\nOutlines for courses conducted by School of Devops.\n\n\nDevops\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nDecoding Devops\n\n\n1day\n\n\nOverview\n\n\n\n\n\n\nDevops for Devs - CI/CD Track\n\n\n2days\n\n\nFoundation\n\n\n\n\n\n\nDevops for Ops - Foundation\n\n\n2days\n\n\nFoundation\n\n\n\n\n\n\n\n\nChef\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nChef Fundamentals\n\n\n3days\n\n\nFoundation\n\n\n\n\n\n\nChef Fundamentals FT\n\n\n2days\n\n\nFast Track\n\n\n\n\n\n\nChef with AWS]\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\nChef and Cloud Integrations\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\nAdvanced Chef\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\n\n\nPuppet\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nPuppet Fundamentals\n\n\n3days\n\n\nFoundation\n\n\n\n\n\n\nPuppet Fundamentals Fast Track\n\n\n2days\n\n\nFast Track\n\n\n\n\n\n\nAdvanced Puppet\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\nDevice Management with Puppet\n\n\n 2days\n\n\nAdvance\n\n\n\n\n\n\nPuppet with AWS\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\nPuppet with Openstack\n\n\n2days\n\n\nAdvance\n\n\n\n\n\n\n\n\nDocker\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nDocker Fundamentals\n\n\n2days\n\n\nFoundation\n\n\n\n\n\n\nDocker Orchestration\n\n\n2days\n\n\n\n\n\n\n\n\nDeploying Micro Services with Docker\n\n\n2days\n\n\n\n\n\n\n\n\n\n\nAnsible\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nAnsible Fundamentals\n\n\n 3days\n\n\nFoundation\n\n\n\n\n\n\n\n\nAWS\n\n\n\n\n\n\n\n\nProgram\n\n\nDuration\n\n\nType\n\n\n\n\n\n\n\n\n\n\nAWS Sysops Foundation\n\n\n 3days\n\n\n\n\n\n\n\n\nAWS Architect Foundation\n\n\n3days\n\n\n\n\n\n\n\n\nAWS Devops Foundation\n\n\n2days\n\n\n\n\n\n\n\n\n\n\nLicense (CC-BY-NC-ND)\n\n\nCourse Outlines   \n by \nSchool of Devops\n is licensed under a \nCreative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License\n.", 
            "title": "Home"
        }, 
        {
            "location": "/README/#index", 
            "text": "Outlines for courses conducted by School of Devops.", 
            "title": "Index"
        }, 
        {
            "location": "/README/#devops", 
            "text": "Program  Duration  Type      Decoding Devops  1day  Overview    Devops for Devs - CI/CD Track  2days  Foundation    Devops for Ops - Foundation  2days  Foundation", 
            "title": "Devops"
        }, 
        {
            "location": "/README/#chef", 
            "text": "Program  Duration  Type      Chef Fundamentals  3days  Foundation    Chef Fundamentals FT  2days  Fast Track    Chef with AWS]  2days  Advance    Chef and Cloud Integrations  2days  Advance    Advanced Chef  2days  Advance", 
            "title": "Chef"
        }, 
        {
            "location": "/README/#puppet", 
            "text": "Program  Duration  Type      Puppet Fundamentals  3days  Foundation    Puppet Fundamentals Fast Track  2days  Fast Track    Advanced Puppet  2days  Advance    Device Management with Puppet   2days  Advance    Puppet with AWS  2days  Advance    Puppet with Openstack  2days  Advance", 
            "title": "Puppet"
        }, 
        {
            "location": "/README/#docker", 
            "text": "Program  Duration  Type      Docker Fundamentals  2days  Foundation    Docker Orchestration  2days     Deploying Micro Services with Docker  2days", 
            "title": "Docker"
        }, 
        {
            "location": "/README/#ansible", 
            "text": "Program  Duration  Type      Ansible Fundamentals   3days  Foundation", 
            "title": "Ansible"
        }, 
        {
            "location": "/README/#aws", 
            "text": "Program  Duration  Type      AWS Sysops Foundation   3days     AWS Architect Foundation  3days     AWS Devops Foundation  2days", 
            "title": "AWS"
        }, 
        {
            "location": "/README/#license-cc-by-nc-nd", 
            "text": "Course Outlines     by  School of Devops  is licensed under a  Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License .", 
            "title": "License (CC-BY-NC-ND)"
        }, 
        {
            "location": "/containers/containers_learning_path/", 
            "text": "Open Containers Learning Path\n\n\nFollowing diagram depicts the open container eco system learning path by School of Devops.", 
            "title": "Containers Learning Path"
        }, 
        {
            "location": "/containers/containers_learning_path/#open-containers-learning-path", 
            "text": "Following diagram depicts the open container eco system learning path by School of Devops.", 
            "title": "Open Containers Learning Path"
        }, 
        {
            "location": "/containers/docker-fundamentals/", 
            "text": "Docker  Fundamentals\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDuration\n\n\n2days\n\n\n\n\n\n\nLevel\n\n\nBeginner\n\n\n\n\n\n\nModules\n\n\n08\n\n\n\n\n\n\nNano Projects\n\n\n04\n\n\n\n\n\n\nFlipped Class\n\n\nNo\n\n\n\n\n\n\nCustomizable\n\n\nYes\n\n\n\n\n\n\n\n\nObjectives\n\n\nThis course  introduces participants to linux container,  docker and open container eco system . Its intended to  help  participants to get started using docker to build,  package  and run applications.\n\n\nWho is this for ?\n\n\nThis course is intended for anyone who is part of the software delivery process and would like to get started using docker in their workflows to build, ship and run applications with containers.\n\n\nThis includes developers, qa and ops  professionals alike who are part of the software delivery process either as part of developing applications, creating  tests or part of the ops team in charge of deploying applications or automation team which enables developers to create their workflows.  \n\n\nWho is this not for ?\n\n\n\n\nIf you are a advanced user of docker already, this course is definitely not for you.\n\n\nIf you already know the fundamentals of docker, mainly the concepts listed below,  but would like to know advanced concepts, you may want to enroll for Docker Advanced course instead.\n\n\nIf you are interested in learning docker on windows, this course is not ideal for you as it focuses on linux containers, even though docker is now supported on windows.\n\n\n\n\nWhat will you do as part of this course ?\n\n\nAs part of this course you will,  \n\n\n\n\nLearn what linux containers are, what is docker and get an overview of  open container eco system.\n\n\nSetup a local docker development environment\n\n\nLaunch containers, publish ports and connect to the applications running inside containers\n\n\nLearn basic container operations and troubleshooting\n\n\nBuild docker images with best practices for  web application, create optimal dockerfiles\n\n\nLearn single host container networking and volumes primitives.\n\n\nLaunch multi container application stacks with interlinked application.\n\n\nCreate specifications for setting up automated development environments with Docker Compose\n\n\nGet a quick overview of Container Orchestration Engine (COE) functionality with Kubernetes/SWARM.\n\n\n\n\nWhat is not covered ?\n\n\nSince this course is a beginner level, its not meant to cover advanced concepts such as,\n\n\n\n\nAdvanced Container Orchestration\n\n\nContainer Security\n\n\nLogging and Monitoring setup for container based systems\n\n\nMulti Host Networking/Overlay/CNI\n\n\nWriting Micro Services Applications\n\n\nCustomising Docker Installation and Setup\n\n\nProduction grade docker setup and deployment\n\n\nCustom registries, base images etc.\n\n\nCloud Integrations\n\n\nNetwork storage and persistence\n\n\n\n\nPre Requisites\n\n\nFollowing are the pre requisite skills to attend this course. Since its a beginner level course, no prior experience with linux containers is assumed.  \n\n\nSkills\n\n\n\n\nLinux/Unix Systems Fundamentals\n\n\nFamiliarity with Command Line Interface (CLI)\n\n\nFundamental knowledge of editors on linux (any one of vi/nano/emacs)\n\n\nUnderstanding of YAML syntax and familiarity with reading/writing basic YAML specifications\n\n\n\n\nHardware and Software  Requirements\n\n\nThese are the prerequisites for each attendee.\n\n\n\n\n\n\n\n\nHardware Requirements\n\n\nSoftware Requirements\n\n\n\n\n\n\n\n\n\n\nLaptop/Desktop with high speed internet connection\n\n\nBase Operating System : Windows / Mac OSX\n\n\n\n\n\n\n8 GB RAM\n\n\nDocker for Mac/Windows\n\n\n\n\n\n\n4 CPU Cores\n\n\nFor windows versions \n 10, Docker for Windows\n\n\n\n\n\n\n20 GB Disk Space available\n\n\nConEmu (Windows Only)\n\n\n\n\n\n\n\n\nGit for Windows (windows only)\n\n\n\n\n\n\n\n\nMinikube\n\n\n\n\n\n\n\n\nLab Setup : Instructions can be found at xxx\n\n\nSupporting Content/Materials\n\n\nFollowing is the supporting material which will be provided to you before/during the course  \n\n\n\n\nSlides (online)  \n\n\nWorkshop (online link)  \n\n\nVideo Course - Zero to Docker by School of Devops  \n\n\n\n\nPre Class Checklist\n\n\nAll participants should have completed the following checklist before attending the course .\n\n\n\n\nWatch  \"Docker Mini Course\" videos by School of Devops. This covers the introduction to Docker and the theory related to containers, key features, advantages and workflow.\n\n\nVerify  your system meets the  hardware pre requisites.\n\n\nValidate the setup : verify all pre requisite software is installed on your system and is functional.\n\n\nJoin our \ndocker channel on gitter\n\n\n\n\nTopics\n\n\nFollowing are the topics which would be covered as part of this course. Detailed course outline follows.\n\n\n\n\nCourse Introduction and Use Case\n\n\nIntroduction to Docker\n\n\nValidating Learning Environment\n\n\nLaunching and Operating Containers\n\n\nDockerizing your applications - building docker images\n\n\nDocker Networking\n\n\nDocker Storage\n\n\nLaunching Multi Container Apps with Compose\n\n\nContainer Orchestration Quick Dive\n\n\n\n\nAdditional Topics if time permits\n\n\n\n\nDocker eco system\n\n\nDocker log drives\n\n\n\n\nDetailed Course Outline\n\n\nThis is the detailed course outline with day wise list of contents.\n\n\nDay I\n\n\nModule1 : Introduction to Containers and Docker\n\n\n\n\nContainers vs VMs\n\n\nUnder the hood\n\n\nNamespaces\n\n\nControl Groups\n\n\nOverlay File System\n\n\n\n\n\n\nAdvantages of using a Container\n\n\nEvolution of Containers\n\n\nDocker Story\n\n\nDocker Workflow\n\n\n\n\nModule 2: Validating Learning Environment\n\n\n\n\nValidating Setup\n        * Docker for Mac/Windows or\n        * Docker Toolbox\n\n\n\n\nModule 3: Launching and Operating Containers\n\n\n\n\nDocker CLI\n\n\nUsing docker cli\n\n\nDisplay information about docker setup  \n\n\n\n\n\n\nBasics of Docker Images\n\n\nRegistry - Docker Hub\n\n\nImage format\n\n\n\n\n\n\nRun a container\n\n\nEphemeral Container\n\n\nContainer with interactive options\n\n\nWith detach mode\n\n\n\n\n\n\nBasic Operations\n\n\ninspect\n\n\nlogs\n\n\nexec\n\n\ncopy\n\n\nstop\n\n\nrm\n\n\nattach\n\n\ndetach\n\n\n\n\n\n\nAdvanced Container Operations\n\n\nPort Mapping\n\n\nLimiting Resources\n\n\nmemory\n\n\ncpu\n\n\nDefining restart policies\n\n\n\n\n\n\n\n\nNano Project\n : Launch portainer.io management app with docker, connect to it and use it to manage local docker environment.\n\n\nModule 4 : Dockerising your applications - building docker images\n\n\n\n\nDocker image basics\n\n\nApproaches to build images\n\n\nimperative approach\n\n\ndeclarative approach\n\n\n\n\n\n\nBuilding an image with imperative approach and docker commit\n\n\nBuilding an image with dockerfile and docker build\n\n\nDockerfile Primer\n\n\nHow to create dockerfiles\n\n\nOverview of Instructions\n\n\nDockerfile Demos\n\n\n\n\n\n\n\n\nNano Project\n : Provided with the source code, build a dockerimage for facebooc clone. Its an app written in C which uses sqlite as a database backend\n\n\n\n\nMulti stage builds\n\n\nAutomated builds with DockerHub and Git\n\n\n\n\nDay II\n\n\nModule 5: Docker Networking and storage\n\n\n\n\nContainer networking concepts: how docker networks a container\n\n\nSingle host network modes\n\n\nbridge\n\n\nhost\n\n\nnone\n\n\n\n\n\n\nMulti host networking conceptual overview  \n\n\n\n\nModule 6: Docker Storage\n\n\n\n\nLocal storage and persistent volumes\n\n\n\n\nTypes of volumes:\n\n\n\n\nautomated\n\n\nnamed volumes\n\n\nhost path\n\n\n\n\n\n\n\n\nOverview of persistent storage in multi host env\n\n\n\n\n\n\nModule 7: Launching and connecting Micro services with Compose\n\n\n\n\nOverview of docker compose\n\n\nRun time configurations\n\n\nLinking applications\n\n\n\n\n\n\nWriting compose v1 spec to define multi app stack\n\n\nConverting to v3 spec  \n\n\n\n\nModule 8: Container Orchestration Quick Dive\n\n\n\n\nContainer Orchestration Concepts\n\n\nWhy do you need a COE\n\n\nCOE Options and Comparison   \n\n\n\n\n\n\nKubernetes Overview\n\n\nWhat is kubernetes ?\n\n\nFeatures\n\n\n\n\n\n\nKey Concepts\n\n\nPods\n\n\nLabels and Selectors\n\n\nServices\n\n\nDeployments  \n\n\n\n\n\n\nSetup Minikube\n\n\nMinicube run down\n\n\nSetup minikube environment\n\n\nValidate kubernetes setup\n\n\n\n\n\n\nDeploy Voting application with minikube\n\n\nLaunch and operate a Pod\n\n\nCreate deployments\n\n\nExpose an app with the Service\n\n\nCreate a Zero downtime deployment\n\n\n\n\n\n\n\n\nNano Project\n : Complete the kubernetes yaml spec given with \nk8s-code\n repo for deploying voting application stack. Once complete apply it with kubectl.  Validate all serivces are up and running.\n\n\nReading List\n\n\nHere is the list of curated resources which you could refer to to learn about docker before the training and  and get an in depth understanding post training.  \n\n\nPluralsight Courses\n\n\n\n\nGetting Started with Docker\n by Nigel Poulton\n\n\nDocker and Container\n, the Big Picture by Nigel Poulton\n\n\n\n\nSafaribooks Online\n\n\n\n\nDocker: Up \n Running by Karl Matthias, Sean P. Kane by Oreilly\n\n\nUsing Docker by Adrian Mouat, Oreilly\n\n\n\n\nTutorials\n\n\n\n\nTutorials with Live Environment\n\n\nLabs by Docker\n\n\nDocker Tutorials by hacks.io\n\n\n\n\nArticles\n\n\n\n\nThe Docker Story \nHow Docker Escaped Near-Death To Become Software\u2019s Next Big Thing", 
            "title": "Docker Fundamentals"
        }, 
        {
            "location": "/containers/docker-fundamentals/#docker-fundamentals", 
            "text": "Duration  2days    Level  Beginner    Modules  08    Nano Projects  04    Flipped Class  No    Customizable  Yes", 
            "title": "Docker  Fundamentals"
        }, 
        {
            "location": "/containers/docker-fundamentals/#objectives", 
            "text": "This course  introduces participants to linux container,  docker and open container eco system . Its intended to  help  participants to get started using docker to build,  package  and run applications.", 
            "title": "Objectives"
        }, 
        {
            "location": "/containers/docker-fundamentals/#who-is-this-for", 
            "text": "This course is intended for anyone who is part of the software delivery process and would like to get started using docker in their workflows to build, ship and run applications with containers.  This includes developers, qa and ops  professionals alike who are part of the software delivery process either as part of developing applications, creating  tests or part of the ops team in charge of deploying applications or automation team which enables developers to create their workflows.", 
            "title": "Who is this for ?"
        }, 
        {
            "location": "/containers/docker-fundamentals/#who-is-this-not-for", 
            "text": "If you are a advanced user of docker already, this course is definitely not for you.  If you already know the fundamentals of docker, mainly the concepts listed below,  but would like to know advanced concepts, you may want to enroll for Docker Advanced course instead.  If you are interested in learning docker on windows, this course is not ideal for you as it focuses on linux containers, even though docker is now supported on windows.", 
            "title": "Who is this not for ?"
        }, 
        {
            "location": "/containers/docker-fundamentals/#what-will-you-do-as-part-of-this-course", 
            "text": "As part of this course you will,     Learn what linux containers are, what is docker and get an overview of  open container eco system.  Setup a local docker development environment  Launch containers, publish ports and connect to the applications running inside containers  Learn basic container operations and troubleshooting  Build docker images with best practices for  web application, create optimal dockerfiles  Learn single host container networking and volumes primitives.  Launch multi container application stacks with interlinked application.  Create specifications for setting up automated development environments with Docker Compose  Get a quick overview of Container Orchestration Engine (COE) functionality with Kubernetes/SWARM.", 
            "title": "What will you do as part of this course ?"
        }, 
        {
            "location": "/containers/docker-fundamentals/#what-is-not-covered", 
            "text": "Since this course is a beginner level, its not meant to cover advanced concepts such as,   Advanced Container Orchestration  Container Security  Logging and Monitoring setup for container based systems  Multi Host Networking/Overlay/CNI  Writing Micro Services Applications  Customising Docker Installation and Setup  Production grade docker setup and deployment  Custom registries, base images etc.  Cloud Integrations  Network storage and persistence", 
            "title": "What is not covered ?"
        }, 
        {
            "location": "/containers/docker-fundamentals/#pre-requisites", 
            "text": "Following are the pre requisite skills to attend this course. Since its a beginner level course, no prior experience with linux containers is assumed.", 
            "title": "Pre Requisites"
        }, 
        {
            "location": "/containers/docker-fundamentals/#skills", 
            "text": "Linux/Unix Systems Fundamentals  Familiarity with Command Line Interface (CLI)  Fundamental knowledge of editors on linux (any one of vi/nano/emacs)  Understanding of YAML syntax and familiarity with reading/writing basic YAML specifications", 
            "title": "Skills"
        }, 
        {
            "location": "/containers/docker-fundamentals/#hardware-and-software-requirements", 
            "text": "These are the prerequisites for each attendee.     Hardware Requirements  Software Requirements      Laptop/Desktop with high speed internet connection  Base Operating System : Windows / Mac OSX    8 GB RAM  Docker for Mac/Windows    4 CPU Cores  For windows versions   10, Docker for Windows    20 GB Disk Space available  ConEmu (Windows Only)     Git for Windows (windows only)     Minikube     Lab Setup : Instructions can be found at xxx", 
            "title": "Hardware and Software  Requirements"
        }, 
        {
            "location": "/containers/docker-fundamentals/#supporting-contentmaterials", 
            "text": "Following is the supporting material which will be provided to you before/during the course     Slides (online)    Workshop (online link)    Video Course - Zero to Docker by School of Devops", 
            "title": "Supporting Content/Materials"
        }, 
        {
            "location": "/containers/docker-fundamentals/#pre-class-checklist", 
            "text": "All participants should have completed the following checklist before attending the course .   Watch  \"Docker Mini Course\" videos by School of Devops. This covers the introduction to Docker and the theory related to containers, key features, advantages and workflow.  Verify  your system meets the  hardware pre requisites.  Validate the setup : verify all pre requisite software is installed on your system and is functional.  Join our  docker channel on gitter", 
            "title": "Pre Class Checklist"
        }, 
        {
            "location": "/containers/docker-fundamentals/#topics", 
            "text": "Following are the topics which would be covered as part of this course. Detailed course outline follows.   Course Introduction and Use Case  Introduction to Docker  Validating Learning Environment  Launching and Operating Containers  Dockerizing your applications - building docker images  Docker Networking  Docker Storage  Launching Multi Container Apps with Compose  Container Orchestration Quick Dive   Additional Topics if time permits   Docker eco system  Docker log drives", 
            "title": "Topics"
        }, 
        {
            "location": "/containers/docker-fundamentals/#detailed-course-outline", 
            "text": "This is the detailed course outline with day wise list of contents.", 
            "title": "Detailed Course Outline"
        }, 
        {
            "location": "/containers/docker-fundamentals/#day-i", 
            "text": "", 
            "title": "Day I"
        }, 
        {
            "location": "/containers/docker-fundamentals/#module1-introduction-to-containers-and-docker", 
            "text": "Containers vs VMs  Under the hood  Namespaces  Control Groups  Overlay File System    Advantages of using a Container  Evolution of Containers  Docker Story  Docker Workflow", 
            "title": "Module1 : Introduction to Containers and Docker"
        }, 
        {
            "location": "/containers/docker-fundamentals/#module-2-validating-learning-environment", 
            "text": "Validating Setup\n        * Docker for Mac/Windows or\n        * Docker Toolbox", 
            "title": "Module 2: Validating Learning Environment"
        }, 
        {
            "location": "/containers/docker-fundamentals/#module-3-launching-and-operating-containers", 
            "text": "Docker CLI  Using docker cli  Display information about docker setup      Basics of Docker Images  Registry - Docker Hub  Image format    Run a container  Ephemeral Container  Container with interactive options  With detach mode    Basic Operations  inspect  logs  exec  copy  stop  rm  attach  detach    Advanced Container Operations  Port Mapping  Limiting Resources  memory  cpu  Defining restart policies     Nano Project  : Launch portainer.io management app with docker, connect to it and use it to manage local docker environment.", 
            "title": "Module 3: Launching and Operating Containers"
        }, 
        {
            "location": "/containers/docker-fundamentals/#module-4-dockerising-your-applications-building-docker-images", 
            "text": "Docker image basics  Approaches to build images  imperative approach  declarative approach    Building an image with imperative approach and docker commit  Building an image with dockerfile and docker build  Dockerfile Primer  How to create dockerfiles  Overview of Instructions  Dockerfile Demos     Nano Project  : Provided with the source code, build a dockerimage for facebooc clone. Its an app written in C which uses sqlite as a database backend   Multi stage builds  Automated builds with DockerHub and Git", 
            "title": "Module 4 : Dockerising your applications - building docker images"
        }, 
        {
            "location": "/containers/docker-fundamentals/#day-ii", 
            "text": "", 
            "title": "Day II"
        }, 
        {
            "location": "/containers/docker-fundamentals/#module-5-docker-networking-and-storage", 
            "text": "Container networking concepts: how docker networks a container  Single host network modes  bridge  host  none    Multi host networking conceptual overview", 
            "title": "Module 5: Docker Networking and storage"
        }, 
        {
            "location": "/containers/docker-fundamentals/#module-6-docker-storage", 
            "text": "Local storage and persistent volumes   Types of volumes:   automated  named volumes  host path     Overview of persistent storage in multi host env", 
            "title": "Module 6: Docker Storage"
        }, 
        {
            "location": "/containers/docker-fundamentals/#module-7-launching-and-connecting-micro-services-with-compose", 
            "text": "Overview of docker compose  Run time configurations  Linking applications    Writing compose v1 spec to define multi app stack  Converting to v3 spec", 
            "title": "Module 7: Launching and connecting Micro services with Compose"
        }, 
        {
            "location": "/containers/docker-fundamentals/#module-8-container-orchestration-quick-dive", 
            "text": "Container Orchestration Concepts  Why do you need a COE  COE Options and Comparison       Kubernetes Overview  What is kubernetes ?  Features    Key Concepts  Pods  Labels and Selectors  Services  Deployments      Setup Minikube  Minicube run down  Setup minikube environment  Validate kubernetes setup    Deploy Voting application with minikube  Launch and operate a Pod  Create deployments  Expose an app with the Service  Create a Zero downtime deployment     Nano Project  : Complete the kubernetes yaml spec given with  k8s-code  repo for deploying voting application stack. Once complete apply it with kubectl.  Validate all serivces are up and running.", 
            "title": "Module 8: Container Orchestration Quick Dive"
        }, 
        {
            "location": "/containers/docker-fundamentals/#reading-list", 
            "text": "Here is the list of curated resources which you could refer to to learn about docker before the training and  and get an in depth understanding post training.", 
            "title": "Reading List"
        }, 
        {
            "location": "/containers/docker-fundamentals/#pluralsight-courses", 
            "text": "Getting Started with Docker  by Nigel Poulton  Docker and Container , the Big Picture by Nigel Poulton", 
            "title": "Pluralsight Courses"
        }, 
        {
            "location": "/containers/docker-fundamentals/#safaribooks-online", 
            "text": "Docker: Up   Running by Karl Matthias, Sean P. Kane by Oreilly  Using Docker by Adrian Mouat, Oreilly", 
            "title": "Safaribooks Online"
        }, 
        {
            "location": "/containers/docker-fundamentals/#tutorials", 
            "text": "Tutorials with Live Environment  Labs by Docker  Docker Tutorials by hacks.io", 
            "title": "Tutorials"
        }, 
        {
            "location": "/containers/docker-fundamentals/#articles", 
            "text": "The Docker Story  How Docker Escaped Near-Death To Become Software\u2019s Next Big Thing", 
            "title": "Articles"
        }, 
        {
            "location": "/containers/advanced-docker/", 
            "text": "Advanced Docker Bootcamp\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDuration\n\n\n2days\n\n\n\n\n\n\nLevel\n\n\nIntermediate, Advanced\n\n\n\n\n\n\nModules\n\n\n09\n\n\n\n\n\n\nFlipped Class\n\n\nYes\n\n\n\n\n\n\nCustomizable\n\n\nYes\n\n\n\n\n\n\n\n\nObjectives\n\n\nThis course follows a hands on  workshop method and builds advanced docker skills on top of existing skills learnt in Docker Fundamentals.\n\n\nFlipped Classroom Methodology\n\n\nThis course follows a \nFlipped Classroom\n methodology, a blended model where participants come prepared with understanding of concepts by going through video/online content. The class time is maximized to perform practical activities to apply the concepts learnt earlier. Practice activities include taking up a use case and solving it by applying the techniques, or performing nano projects etc.   \n\n\nTo make it successful, participants need to be prepared in advance, by going through  the recommended pre class content to clear the concepts as well as by making sure their systems are prepared with all the software required, before the class. The pre class checklist given below can be handy for this purpose.\n\n\nWho is this for ?\n\n\nThis course is for someone who has already taken docker fundamentals course and would like to learn advanced topics such as how to integrate docker into developement and continuous integration workflows, how to add security while building as well as running container systems, how to create custom base images, registries  etc. as well as setting up auxiliary services such as monitoring and centralized logging for container systems.\n\n\nWho is this not for ?\n\n\n\n\nIf you are a advanced user of docker already, this course is definitely not for you.\n\n\nIf you are interested in learning docker on windows, this course is not ideal for you as it focuses on linux containers, even though docker is now supported on windows.\n\n\nIf you have already taken Docker Fundamentals, and interested in learning container orchestration and production deployments, you may want to consider \nKubernetes Bootcamp\n instead.\n\n\n\n\nWhat will you do as part of this course ?\n\n\nAs part of this course you will,  \n\n\n\n\nInstall and configure docker by hand on a generic linux os, setup certificates  and connect to it from a remote client.\n\n\nLearn about best practices and methods that you could incorporate to use docker for packaging as well as testing applications.\n\n\nLearn to create your own custom \nbase images\n instead of using parent images from the registry/third party.\n\n\nCreate a custom registry using \nHarbor\n, setup users and access and incorporate it into your workflow.\n\n\nIncorporate security best practices while building and distributing docker images.\n\n\nLearn how to run \ndocker bench\n security scan and enhance run time security.\n\n\nIntegrate docker with jenkins to setup \ncontinuous integration\n environment for micro services based application.\n\n\n\n\nWhat is not covered ?\n\n\nSince this course is a beginner level, its not meant to cover advanced concepts such as,\n\n\n\n\nAdvanced Container Orchestration\n\n\nMulti Host Networking/Overlay/CNI\n\n\nWriting Micro Services Applications\n\n\nProduction grade docker setup and deployment\n\n\nCloud Integrations\n\n\n\n\nPre Requisites\n\n\nFollowing are the pre requisite skills to attend this course. Since its a beginner level course, no prior experience with linux containers is assumed.  \n\n\nCourses\n\n\nYou should have attended the following course, or have demonstrable knowledge with the topics included in the following course.\n\n\n\n\nDocker Fundamentals\n\n\n\n\nPre Assessment test will be conducted at the beginning of the course to asses the skills.\n\n\nSkills\n\n\n\n\nDocker Usage  \n\n\nRunning Containers\n\n\nBuilding Images and writing Dockerfiles\n\n\nDocker Compose  \n\n\nDocker Networking and Storage\n\n\n\n\n\n\nLinux/Unix Systems Fundamentals\n\n\nFamiliarity with Command Line Interface (CLI)\n\n\nFundamental knowledge of editors on linux (any one of vi/nano/emacs)\n\n\nUnderstanding of YAML syntax and familiarity with reading/writing basic YAML specifications\n\n\n\n\nHardware and Software  Requirements\n\n\nThese are the prerequisites for each attendee.\n\n\n\n\n\n\n\n\nHardware Requirements\n\n\nSoftware Requirements\n\n\n\n\n\n\n\n\n\n\nLaptop/Desktop with high speed internet connection\n\n\nBase Operating System : Windows / Mac OSX\n\n\n\n\n\n\n8 GB RAM\n\n\nVirtualBox\n\n\n\n\n\n\n4 CPU Cores\n\n\nVagrant\n\n\n\n\n\n\n20 GB Disk Space available\n\n\nConEmu (Windows Only)\n\n\n\n\n\n\n\n\nGit for Windows (windows only)\n\n\n\n\n\n\n\n\nLab Setup : Instructions can be found at xxx\n\n\nSupporting Content/Materials\n\n\nFollowing is the supporting material which will be provided to you before/during the course  \n\n\n\n\nSlides (online)  \n\n\nWorkshop (online link)  \n\n\nVideo Course - XXX by School of Devops  \n\n\n\n\nPre Class Checklist\n\n\nAll participants should have completed the following checklist before attending the course .\n\n\n\n\nSuccessfully Completed  \nDocker Fundamentals\n Course, or have equivalent skills.\n\n\nVerify  your system meets the  hardware pre requisites.\n\n\nValidate the setup : verify all pre requisite software is installed on your system and is functional.\n\n\nJoin our \ndocker channel on gitter\n\n\n\n\n\n\nTopics\n\n\nFollowing are the topics which would be covered as part of this course. Detailed course outline follows.\n\n\n\n\nCustom Docker Installation and Configuration\n\n\nIntroduction to Use Case - Mogambo.com\n\n\nBuilding Custom Base Images\n\n\nDeploying a Custom Registry - Harbor\n\n\nBuilding and distributing images securely\n\n\nSecuring Container Runtimes\n\n\nContinuous Integration with Docker and Jenkins\n\n\nSetting Up Monitoring\n\n\nCentralized Log Management\n\n\n\n\nCustomizing the Course: Possible Additional Topics\n\n\nFollowing topics are \nnot included\n but can be added in order to customize this training. You are welcome to suggest topics based on the relevance.\n\n\n\n\nCloud and Docker : AWS, GCE, Azure\n\n\nGoing serverless with Docker\n\n\nBeing 12 Factor compliant with Docker\n\n\ndocker-machine primer\n\n\nLinuxkit / Infrakit and Docker Moby\n\n\nFlocker for  docker storage\n\n\nPersistent storage related topics\n\n\n\n\nDetailed Course Outline\n\n\nThis is the detailed course outline with day wise list of contents\n\n\nDay I\n\n\nIntroduction and Pre Assessment\n\n\n\n\nTrainer, class and course introduction\n\n\nPre Assessment Test\n\n\n\n\nModule 1: Custom Docker Installation and Configuration\n\n\n\n\nSetup a linux VM\n\n\nInstall Docker with package manager\n\n\nInstall Docker Compose\n\n\nDocker daemon configuration\n\n\nRun Docker on a port with certs\n\n\nConfigure local docker client to talk to remote server with certificates\n\n\n\n\nModule 2: Introduction to Use Case - Mogambo.com\n\n\n\n\nMogambo - the Organization and the application\n\n\nOverview of the Architecture\n\n\nCode overview and the best practices the developers can incorporate\n\n\nApplication Repositories\n\n\nDockerfiles\n\n\nCompose Specs\n\n\nMakefiles\n\n\n\n\n\n\nDemo of build, test, deploy etc.,\n\n\nLocal image distribution with load/save\n\n\n\n\nModule 3: Building Custom Base Images\n\n\n\n\nParent images Vs Base images\n\n\nBuilding a custom image with scratch\n\n\nCreating a custom Ubuntu image with the bootstrap\n\n\nCreating a CentOS image using a scripted approach\n\n\n\n\nModule 4: Deploying a Custom Registry - Harbor\n\n\n\n\nIntroduction to Harbor by VMware\n\n\nInstall and Configure Harbor\n\n\nHarbor Walkthrough\n\n\nWorking with a custom registry\n\n\nPush/Publish images to Harbor\n\n\n\n\nModule 5:Building and Distributing Images Securely\n\n\n\n\nDockerfiles with USER and gosu / COPY Vs ADD\n\n\nRegistry with RBAC\n\n\nVulnerability Scanning for Images\n\n\nEnabling Content Trust\n\n\nUsing Notary to sign images\n\n\n\n\nDay II\n\n\nModule 6: Securing Container Runtimes\n\n\n\n\nHost Security\n\n\nSELinux\n\n\nApparmor\n\n\nUpdates \n Patches\n\n\nLinuxkit \n Infrakit\n\n\n\n\n\n\nRun Docker Bench Script for security scan\n\n\nSecuring Docker Daemon\n\n\nNetwork traffic\n\n\nLogging level\n\n\nTLS\n\n\nUlimit default\n\n\n\n\n\n\nSecuring Container Runtime\n\n\nSecurity Options\n\n\nMemory and CPU restrictions\n\n\nRestart, Policies\n\n\nUlimits\n\n\nCapablities\n\n\n\n\n\n\n\n\nModule 7: Continuous Integration with Docker\n\n\n\n\nDocker based build, test, unit tests, e2d tests, setup for Mogambo\n\n\nMakefiles \n Scripts\n\n\nSetting up CI env with Jenkins\n\n\nSetup a pipeline\n\n\nBuild\n\n\nUnit Tests\n\n\nFunctional Tests\n\n\ne2e Tests\n\n\n\n\n\n\nTag, Push and Publish Images\n\n\n\n\nModule 8: Setting Up Monitoring\n\n\n\n\nMonitoring Containers, Hosts and Applcations\n\n\nPrometheus\n\n\nAdding Grafana for web UI\n\n\n\n\nModule 9: Centralized Log Management\n\n\n\n\nDocker Log drivers\n\n\nSetup ELK Stack or equivalent\n\n\nLaunching containers with log drivers\n\n\n\n\nBadge : Docker Champion\n\n\nSuccessful completion of this course along with the project work and an assessment at the end of this course would qualify you to receive a Docker Champion badge by School of Devops. This badge is compliant with \nMozilla's Open Badge Standards\n and can be added to your social profiles (e.g. LinkedIn) and is verifiable.\n\n\nExample of a badge is as follows,\n\n\n\n\nReading List\n\n\nHere is the list of curated resources which you could refer to to learn about docker before the training and  and get an in depth understanding post training.  \n\n\nPluralsight Courses\n\n\n\n\nGetting Started with Docker\n by Nigel Poulton\n\n\nDocker and Container\n, the Big Picture by Nigel Poulton\n\n\n\n\nSafaribooks Online\n\n\n\n\nDocker: Up \n Running by Karl Matthias, Sean P. Kane by Oreilly\n\n\nUsing Docker by Adrian Mouat, Oreilly\n\n\n\n\nTutorials\n\n\n\n\nTutorials with Live Environment\n\n\nLabs by Docker\n\n\nDocker Tutorials by hacks.io", 
            "title": "Advanced Docker"
        }, 
        {
            "location": "/containers/advanced-docker/#advanced-docker-bootcamp", 
            "text": "Duration  2days    Level  Intermediate, Advanced    Modules  09    Flipped Class  Yes    Customizable  Yes", 
            "title": "Advanced Docker Bootcamp"
        }, 
        {
            "location": "/containers/advanced-docker/#objectives", 
            "text": "This course follows a hands on  workshop method and builds advanced docker skills on top of existing skills learnt in Docker Fundamentals.", 
            "title": "Objectives"
        }, 
        {
            "location": "/containers/advanced-docker/#flipped-classroom-methodology", 
            "text": "This course follows a  Flipped Classroom  methodology, a blended model where participants come prepared with understanding of concepts by going through video/online content. The class time is maximized to perform practical activities to apply the concepts learnt earlier. Practice activities include taking up a use case and solving it by applying the techniques, or performing nano projects etc.     To make it successful, participants need to be prepared in advance, by going through  the recommended pre class content to clear the concepts as well as by making sure their systems are prepared with all the software required, before the class. The pre class checklist given below can be handy for this purpose.", 
            "title": "Flipped Classroom Methodology"
        }, 
        {
            "location": "/containers/advanced-docker/#who-is-this-for", 
            "text": "This course is for someone who has already taken docker fundamentals course and would like to learn advanced topics such as how to integrate docker into developement and continuous integration workflows, how to add security while building as well as running container systems, how to create custom base images, registries  etc. as well as setting up auxiliary services such as monitoring and centralized logging for container systems.", 
            "title": "Who is this for ?"
        }, 
        {
            "location": "/containers/advanced-docker/#who-is-this-not-for", 
            "text": "If you are a advanced user of docker already, this course is definitely not for you.  If you are interested in learning docker on windows, this course is not ideal for you as it focuses on linux containers, even though docker is now supported on windows.  If you have already taken Docker Fundamentals, and interested in learning container orchestration and production deployments, you may want to consider  Kubernetes Bootcamp  instead.", 
            "title": "Who is this not for ?"
        }, 
        {
            "location": "/containers/advanced-docker/#what-will-you-do-as-part-of-this-course", 
            "text": "As part of this course you will,     Install and configure docker by hand on a generic linux os, setup certificates  and connect to it from a remote client.  Learn about best practices and methods that you could incorporate to use docker for packaging as well as testing applications.  Learn to create your own custom  base images  instead of using parent images from the registry/third party.  Create a custom registry using  Harbor , setup users and access and incorporate it into your workflow.  Incorporate security best practices while building and distributing docker images.  Learn how to run  docker bench  security scan and enhance run time security.  Integrate docker with jenkins to setup  continuous integration  environment for micro services based application.", 
            "title": "What will you do as part of this course ?"
        }, 
        {
            "location": "/containers/advanced-docker/#what-is-not-covered", 
            "text": "Since this course is a beginner level, its not meant to cover advanced concepts such as,   Advanced Container Orchestration  Multi Host Networking/Overlay/CNI  Writing Micro Services Applications  Production grade docker setup and deployment  Cloud Integrations", 
            "title": "What is not covered ?"
        }, 
        {
            "location": "/containers/advanced-docker/#pre-requisites", 
            "text": "Following are the pre requisite skills to attend this course. Since its a beginner level course, no prior experience with linux containers is assumed.", 
            "title": "Pre Requisites"
        }, 
        {
            "location": "/containers/advanced-docker/#courses", 
            "text": "You should have attended the following course, or have demonstrable knowledge with the topics included in the following course.   Docker Fundamentals   Pre Assessment test will be conducted at the beginning of the course to asses the skills.", 
            "title": "Courses"
        }, 
        {
            "location": "/containers/advanced-docker/#skills", 
            "text": "Docker Usage    Running Containers  Building Images and writing Dockerfiles  Docker Compose    Docker Networking and Storage    Linux/Unix Systems Fundamentals  Familiarity with Command Line Interface (CLI)  Fundamental knowledge of editors on linux (any one of vi/nano/emacs)  Understanding of YAML syntax and familiarity with reading/writing basic YAML specifications", 
            "title": "Skills"
        }, 
        {
            "location": "/containers/advanced-docker/#hardware-and-software-requirements", 
            "text": "These are the prerequisites for each attendee.     Hardware Requirements  Software Requirements      Laptop/Desktop with high speed internet connection  Base Operating System : Windows / Mac OSX    8 GB RAM  VirtualBox    4 CPU Cores  Vagrant    20 GB Disk Space available  ConEmu (Windows Only)     Git for Windows (windows only)     Lab Setup : Instructions can be found at xxx", 
            "title": "Hardware and Software  Requirements"
        }, 
        {
            "location": "/containers/advanced-docker/#supporting-contentmaterials", 
            "text": "Following is the supporting material which will be provided to you before/during the course     Slides (online)    Workshop (online link)    Video Course - XXX by School of Devops", 
            "title": "Supporting Content/Materials"
        }, 
        {
            "location": "/containers/advanced-docker/#pre-class-checklist", 
            "text": "All participants should have completed the following checklist before attending the course .   Successfully Completed   Docker Fundamentals  Course, or have equivalent skills.  Verify  your system meets the  hardware pre requisites.  Validate the setup : verify all pre requisite software is installed on your system and is functional.  Join our  docker channel on gitter", 
            "title": "Pre Class Checklist"
        }, 
        {
            "location": "/containers/advanced-docker/#topics", 
            "text": "Following are the topics which would be covered as part of this course. Detailed course outline follows.   Custom Docker Installation and Configuration  Introduction to Use Case - Mogambo.com  Building Custom Base Images  Deploying a Custom Registry - Harbor  Building and distributing images securely  Securing Container Runtimes  Continuous Integration with Docker and Jenkins  Setting Up Monitoring  Centralized Log Management", 
            "title": "Topics"
        }, 
        {
            "location": "/containers/advanced-docker/#customizing-the-course-possible-additional-topics", 
            "text": "Following topics are  not included  but can be added in order to customize this training. You are welcome to suggest topics based on the relevance.   Cloud and Docker : AWS, GCE, Azure  Going serverless with Docker  Being 12 Factor compliant with Docker  docker-machine primer  Linuxkit / Infrakit and Docker Moby  Flocker for  docker storage  Persistent storage related topics", 
            "title": "Customizing the Course: Possible Additional Topics"
        }, 
        {
            "location": "/containers/advanced-docker/#detailed-course-outline", 
            "text": "This is the detailed course outline with day wise list of contents", 
            "title": "Detailed Course Outline"
        }, 
        {
            "location": "/containers/advanced-docker/#day-i", 
            "text": "", 
            "title": "Day I"
        }, 
        {
            "location": "/containers/advanced-docker/#introduction-and-pre-assessment", 
            "text": "Trainer, class and course introduction  Pre Assessment Test", 
            "title": "Introduction and Pre Assessment"
        }, 
        {
            "location": "/containers/advanced-docker/#module-1-custom-docker-installation-and-configuration", 
            "text": "Setup a linux VM  Install Docker with package manager  Install Docker Compose  Docker daemon configuration  Run Docker on a port with certs  Configure local docker client to talk to remote server with certificates", 
            "title": "Module 1: Custom Docker Installation and Configuration"
        }, 
        {
            "location": "/containers/advanced-docker/#module-2-introduction-to-use-case-mogambocom", 
            "text": "Mogambo - the Organization and the application  Overview of the Architecture  Code overview and the best practices the developers can incorporate  Application Repositories  Dockerfiles  Compose Specs  Makefiles    Demo of build, test, deploy etc.,  Local image distribution with load/save", 
            "title": "Module 2: Introduction to Use Case - Mogambo.com"
        }, 
        {
            "location": "/containers/advanced-docker/#module-3-building-custom-base-images", 
            "text": "Parent images Vs Base images  Building a custom image with scratch  Creating a custom Ubuntu image with the bootstrap  Creating a CentOS image using a scripted approach", 
            "title": "Module 3: Building Custom Base Images"
        }, 
        {
            "location": "/containers/advanced-docker/#module-4-deploying-a-custom-registry-harbor", 
            "text": "Introduction to Harbor by VMware  Install and Configure Harbor  Harbor Walkthrough  Working with a custom registry  Push/Publish images to Harbor", 
            "title": "Module 4: Deploying a Custom Registry - Harbor"
        }, 
        {
            "location": "/containers/advanced-docker/#module-5building-and-distributing-images-securely", 
            "text": "Dockerfiles with USER and gosu / COPY Vs ADD  Registry with RBAC  Vulnerability Scanning for Images  Enabling Content Trust  Using Notary to sign images", 
            "title": "Module 5:Building and Distributing Images Securely"
        }, 
        {
            "location": "/containers/advanced-docker/#day-ii", 
            "text": "", 
            "title": "Day II"
        }, 
        {
            "location": "/containers/advanced-docker/#module-6-securing-container-runtimes", 
            "text": "Host Security  SELinux  Apparmor  Updates   Patches  Linuxkit   Infrakit    Run Docker Bench Script for security scan  Securing Docker Daemon  Network traffic  Logging level  TLS  Ulimit default    Securing Container Runtime  Security Options  Memory and CPU restrictions  Restart, Policies  Ulimits  Capablities", 
            "title": "Module 6: Securing Container Runtimes"
        }, 
        {
            "location": "/containers/advanced-docker/#module-7-continuous-integration-with-docker", 
            "text": "Docker based build, test, unit tests, e2d tests, setup for Mogambo  Makefiles   Scripts  Setting up CI env with Jenkins  Setup a pipeline  Build  Unit Tests  Functional Tests  e2e Tests    Tag, Push and Publish Images", 
            "title": "Module 7: Continuous Integration with Docker"
        }, 
        {
            "location": "/containers/advanced-docker/#module-8-setting-up-monitoring", 
            "text": "Monitoring Containers, Hosts and Applcations  Prometheus  Adding Grafana for web UI", 
            "title": "Module 8: Setting Up Monitoring"
        }, 
        {
            "location": "/containers/advanced-docker/#module-9-centralized-log-management", 
            "text": "Docker Log drivers  Setup ELK Stack or equivalent  Launching containers with log drivers", 
            "title": "Module 9: Centralized Log Management"
        }, 
        {
            "location": "/containers/advanced-docker/#badge-docker-champion", 
            "text": "Successful completion of this course along with the project work and an assessment at the end of this course would qualify you to receive a Docker Champion badge by School of Devops. This badge is compliant with  Mozilla's Open Badge Standards  and can be added to your social profiles (e.g. LinkedIn) and is verifiable.  Example of a badge is as follows,", 
            "title": "Badge : Docker Champion"
        }, 
        {
            "location": "/containers/advanced-docker/#reading-list", 
            "text": "Here is the list of curated resources which you could refer to to learn about docker before the training and  and get an in depth understanding post training.", 
            "title": "Reading List"
        }, 
        {
            "location": "/containers/advanced-docker/#pluralsight-courses", 
            "text": "Getting Started with Docker  by Nigel Poulton  Docker and Container , the Big Picture by Nigel Poulton", 
            "title": "Pluralsight Courses"
        }, 
        {
            "location": "/containers/advanced-docker/#safaribooks-online", 
            "text": "Docker: Up   Running by Karl Matthias, Sean P. Kane by Oreilly  Using Docker by Adrian Mouat, Oreilly", 
            "title": "Safaribooks Online"
        }, 
        {
            "location": "/containers/advanced-docker/#tutorials", 
            "text": "Tutorials with Live Environment  Labs by Docker  Docker Tutorials by hacks.io", 
            "title": "Tutorials"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/", 
            "text": "Kubernetes Bootcamp\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDuration\n\n\n2days\n\n\n\n\n\n\nLevel\n\n\nIntermediate, Advanced\n\n\n\n\n\n\nModules\n\n\n10\n\n\n\n\n\n\nFlipped Class\n\n\nYes\n\n\n\n\n\n\nCustomizable\n\n\nYes\n\n\n\n\n\n\n\n\nObjectives\n\n\nThis course follows a hands on  workshop method and builds container orchestration skills  on top of existing skills learnt in Docker Fundamentals. Participants learn how to built a production grade resilient, self healing infrastructure  with kubernetes. They take the container images built earlier and deploy with the high availability, fault tolerance, scalablility provided by kubernetes.\n\n\nFlipped Classroom Methodology\n\n\nThis course follows a \nFlipped Classroom\n methodology, a blended model where participants come prepared with understanding of concepts by going through video/online content. The class time is maximized to perform practical activities to apply the concepts learnt earlier. Practice activities include taking up a use case and solving it by applying the techniques, or performing nano projects etc.   \n\n\nTo make it successful, participants need to be prepared in advance, by going through  the recommended pre class content to clear the concepts as well as by making sure their systems are prepared with all the software required, before the class. The pre class checklist given below can be handy for this purpose.\n\n\nWho is this for ?\n\n\n\n\nThis course is for someone who has already taken docker fundamentals course/has equivalent knowledge, and would like to learn how to extend it to \norchestrate container\n deployments at production scale with kubernetes.\n\n\nIf you are a \nOperations/Systems\n personnel and would like to learn how scalable, fault tolerant and high available infrastructures are built on or off cloud to orchestrate container based deployments, this course it for you.\n\n\nIf you are a \ndeveloper\n and would like to learn how to deploy your application stacks in production, on top of scalable, highly available  and leverage features provided by kubernetes, this course is for you.\n\n\nIf you are a \nQA\n, and if your organization has a staging/QA environment built on kubernetes, and you would like to understand how to leverage it for setting up automated test workflow and learn the primitives offered by kubernetes, this course is for you.\n\n\nYou could be developer/operations personnel and be in charge of securing application infrastructure and setup auxiliary services such as  monitoring, centralized  logging etc. this course is for you.\n\n\n\n\nWho is this not for ?\n\n\n\n\nIf you are a \nadvanced user of Kubernetes\n already, this course is definitely not for you.\n\n\nIf you are looking to start with Kubernetes concepts, this course is not for you as it assumes basic understanding of Kubernetes and COEs. There is a free resource \nKubernetes Quick Dive\n which you should go through before attending this workshop.  \n\n\nIf you are interested in learning docker/container orchestration on \nwindows\n, this course is not ideal for you as it focuses on linux containers.\n\n\nIf you expect to learn a technology which is mainly driven through a \nGUI\n, this course is not suitable for you. Using kubernetes requires you to write YAML specifications, use command line tools etc.  \n\n\n\n\nWhat will you do as part of this course ?\n\n\nAs part of this course you will,  \n\n\n\n\nDesign a \nscalable, resilient, secure\n solution for deploying microservices application stack in production using primitives offered by kubernetes.\n\n\nInstall and configure a simple(non HA) multi node kubernetes cluster  with \nkubeadm\n. You would also have a conceptual understanding of  how to build a production quality cluster with high availability, scalability,  redundancy and  security considerations.\n\n\nLearn how applications from a micro services stack interconnect with \nservices\n as well as expose public facing services with various options including nodeport, externalIP, ingress etc.\n\n\nAchieve  \nContinuous Deployment\n with different release strategies  such as \nZero Downtime, Blue/Green, Canary\n etc.  \n\n\nLearn how to manage \npersistent storage\n in a kubernetes environment\n\n\nLearn about the network primitives including \nCNI\n plugins, service networking and iptables, ingress etc.\n\n\nDeploy an application which is auto scalable, high available, and resilient to failures.\n\n\n\n\nWhat is not covered ?\n\n\nEven though this course covers many concepts related to kubernetes, since its a very vast topic, it still has the following areas uncovered.\n\n\n\n\nAdvanced RBAC\n\n\nCloud specific provisioning and integration\n\n\nHA deployment of a kubernetes cluster with multi masters\n\n\nIn depth kubernetes administration\n\n\nWriting Micro Services Applications\n\n\nAlternate container runtimes e.g. rocker/rkt, runc\n\n\n\n\nPre Requisites\n\n\nFollowing are the pre requisite skills to attend this course. Since its a beginner level course, no prior experience with linux containers is assumed.  \n\n\nCourses\n\n\nYou should have attended the following course, or have demonstrable knowledge with the topics included in the following course.\n\n\n\n\nDocker Fundamentals\n\n\n\n\nPre Assessment test will be conducted at the beginning of the course to asses the skills.\n\n\nSkills\n\n\n\n\nDocker Basics\n  \n\n\nRunning Containers\n\n\nBuilding Images and writing Dockerfiles\n\n\nDocker Compose  \n\n\nDocker Networking and Storage\n\n\n\n\n\n\nLinux/Unix Systems Fundamentals\n\n\nFamiliarity with Command Line Interface (\nCLI\n)\n\n\nFundamental knowledge of editors on linux (any one of vi/nano/emacs)\n\n\nUnderstanding of \nYAML\n syntax and familiarity with reading/writing basic YAML specifications\n\n\n\n\nHardware and Software  Requirements\n\n\nThese are the prerequisites for each attendee.\n\n\n\n\n\n\n\n\nHardware Requirements\n\n\nSoftware Requirements\n\n\n\n\n\n\n\n\n\n\nLaptop/Desktop with high speed internet connection\n\n\nBase Operating System : Windows / Mac OSX\n\n\n\n\n\n\n8 GB RAM\n\n\nVirtualBox\n\n\n\n\n\n\n4 CPU Cores\n\n\nVagrant\n\n\n\n\n\n\n20 GB Disk Space available\n\n\nConEmu (Windows Only)\n\n\n\n\n\n\n\n\nGit for Windows (windows only)\n\n\n\n\n\n\n\n\nLab Setup : Instructions can be found at xxx\n\n\nSupporting Content/Materials\n\n\nFollowing is the supporting material which will be provided to you before/during the course  \n\n\n\n\nSlides (online)  \n\n\nWorkshop (online link)  \n\n\nVideo Course - XXX by School of Devops  \n\n\n\n\nPre Class Checklist\n\n\nAll participants should have completed the following checklist before attending the course .\n\n\n\n\nSuccessfully Completed  \nDocker Fundamentals\n Course, or have equivalent skills.\n\n\nVerify  your system meets the  hardware pre requisites.\n\n\nValidate the setup : verify all pre requisite software is installed on your system and is functional.\n\n\nJoin our \nkubernetes channel on gitter\n\n\n\n\n\n\nTopics\n\n\nFollowing are the topics which would be covered as part of this course. Detailed course outline follows.\n\n\n\n\nDesign Workshop:  Mapping Mogambo's Micro Services Architecture to Kubernetes\n\n\nDesign Workshop: Production grade Kubernetes Architecture design\n\n\nSetup Kubernetes Cluster\n\n\nAdvanced Pod Scheduling\n\n\nPublishing Applications with Services\n\n\nAchieving Application High Availability and creating Release Strategies with Deployments\n\n\nAdding configurations with ConfigMaps and Secrets\n\n\nAuto Scaling with Horizontal Pod Autoscaler (HPA)\n\n\nStorage and persistence\n\n\nAdding security with Network Policies\n\n\n\n\nAdditional Topics if time permits\n  * Additional Controllers\n  * Centralized Log Management\n  * Cluster Maintenance\n\n\nDetailed Course Outline\n\n\nThis is the detailed course outline with day wise list of contents\n\n\nDay I\n\n\nIntroduction and Assessment\n\n\n\n\nTrainer, Class and Course Introduction\n\n\nPre-Assessment Test\n\n\nFormation of Groups: Group of 3/4 participants is formed. Each group\n  will collectively come up with the solutions design, which is then discussed\n  in the class, which is followed by the implementation of a common solution.\n\n\n\n\nModule 1:  Design Workshop - Mapping Mogambo's Micro Services Architecture to Kubernetes\n\n\n\n\nIntroduction to the Use Case\n\n\nMogambo - The organization and the Application\n\n\nArchitecture and Problem Statement\n\n\nDesign Workshop\n\n\nThis is intended for the participants to come up with the strategy to deploy\nthe application stack described with Kubernetes. Participants would come up with\nthe structure of the code, map application deployment to kubernetes components e.g. deployments, services, ingress etc. and come up with the roadmap which is followed\nthrough rest of the workshop.\n\n\n\n\n\n\n\n\nModule 2: Design Workshop: Production grade Kubernetes Architecture\n\n\n\n\nSpecification of the problem statement   \n\n\nDesign Workshop: This is a design workshop where each group formed earlier comes\n  up with a sample design for a high available, fault tolerant, scalable and secure  kubernetes cluster using all the primitives they have learnt as part of the pre course exercise. This is followed by a quick discussion/review.\n\n\n\n\nModule 3: Setup and configure kubernetes Cluster\n\n\n\n\nSetup 2/3 nodes with VirtualBox/Vagrant/Cloud\n\n\nInstall kubernetes with kubeadm\n\n\nCNI Overview\n\n\nNetwork containers with  CNI using  weave/flannel/calico plugin\n\n\nConfigure kubectl admin client\n\n\nSetup Kubernetes Dashboard\n\n\nOverview of kubernetes configurations\n\n\nKubernetes RBAC overview - contexts, roles, serviceaccounts etc.\n\n\nSetup a project/environment namespace and switch to it\n\n\n\n\nModule 4: Advanced Pod Scheduling\n\n\n\n\nDefining node/pod affinity and anti affinity\n\n\nAdding health checks\n\n\nWhy and how to define pod resource limits\n\n\nTaints and tolerations\n\n\n\n\nModule 5: Publishing Applications with Services\n\n\n\n\nPicking up the right type of a Service\n\n\nCluster IP and DNS  \n\n\nnodePort\n\n\nexternalIP\n\n\nloadbalancer\n\n\nheadless services with Endpoints/ExternalNames\n\n\n\n\n\n\nLabels and Selectors\n\n\nService API Specs\n\n\nTypes\n\n\nTraffic Policy\n\n\nSelector\n\n\n\n\n\n\nServices vs Ingress\n\n\nCreating service resources  for applications and backing services\n\n\n\n\nModule 6: Achieving Application High Availability and creating Release Strategies with Deployments\n\n\n\n\nDeployments and/vs Replication Controllers\n\n\nDeployment API Specs  \n\n\nDefining replication specs  \n\n\nDefining Deployment Strategies\n\n\nRolling Update\n\n\nRecreate\n\n\nBatch Size\n\n\n\n\n\n\nDeployment Operations\n\n\nDescribe\n\n\nRollouts\n\n\nRollbacks\n\n\nEdit\n\n\nPause/Unpause\n\n\n\n\n\n\nAdditional Release Strategies\n\n\nCanary Relases\n\n\nBlue/Green Deployments\n\n\n\n\n\n\n\n\nDay II\n\n\nModule 7: Adding configurations with ConfigMaps and Secrets\n\n\n\n\nConfigMaps and Secrets Specs\n\n\nInjecting configurations as\n\n\nEnvironment Variables\n\n\nFiles\n\n\n\n\n\n\nDistributing sensitive data with secrets\n\n\n\n\nModule 8: Auto Scaling with Horizontal Pod Autoscaler (HPA)\n\n\n\n\nScaling deployments\n\n\nmanually\n\n\nautoscaling\n\n\n\n\n\n\nHPA Specs\n\n\nScaling metrics\n\n\ndefault\n\n\ncustom\n\n\n\n\n\n\nSetting up monitoring for kubernetes\n\n\nheapster\n\n\ninfluxdb\n\n\ngragana\n\n\n\n\n\n\nCreating autoscaling configs\n\n\n\n\nModule 9: Storage and Persistence\n\n\n\n\nPersistent Storage Concepts\n\n\nStorage Drivers\n\n\nPersistentVolumes\n\n\nPersistentVolumeClaims\n\n\nStorageClass\n\n\n\n\n\n\nSetting up a database with persistent volume\n\n\n\n\nModule 10: Securing with Network Policies\n\n\n\n\nNetwork Policy overview\n\n\nNetwork policy specs\n\n\nDefining network policy for the application stack\n\n\n\n\nAdditional Topics if time permits\n\n\nAdvanced Controllers\n\n\n\n\ndaemonSets\n\n\nstatefulSets\n\n\njobs\n\n\ncrons\n\n\n\n\nCentralized Logging\n\n\n\n\nCentralized logging for kubernetes\n\n\nSetting up a ELK stack\n\n\n\n\nCluster Maintenance\n\n\n\n\nCluster Upgrade\n\n\nOS Upgrade\n\n\nBackups and Restore\n\n\n\n\nBadge : Kubernetes Champion\n\n\nSuccessful completion of this course along with the project work and an assessment at the end of this course would qualify you to receive a Docker Champion badge by School of Devops. This badge is compliant with \nMozilla's Open Badge Standards\n and can be added to your social profiles (e.g. LinkedIn) and is verifiable.\n\n\nExample of a badge is as follows,\n\n\n\n\nReading List\n\n\nHere is the list of curated resources which you could refer to to learn about docker before the training and  and get an in depth understanding post training.  \n\n\nYoutube Resources\n\n\n\n\nKubernetes Introduction by Kelsey Hightower\n\n\nLife of a Packet\n\n\n\n\nVideo Courses\n\n\n\n\nScalable Micro Services with Kubernetes\n by Carter Morgan, Kelsey Hightower, Gundega Dekena\n\n\n\n\nSafaribooks Online\n\n\n\n\nKubernetes Up and Running - Kelsey Hightower\n\n\n\n\nTutorials\n\n\n\n\n\n\nApplication Example Tutorials\n\n\n\n\n\n\nApplication Stack Examples\n\n\n\n\n\n\nOfficial Kubernetes Bootcamp\n\n\n\n\n\n\nKubernetes in 10 mins\n\n\n\n\n\n\nKubernetes the Hard Way\n\n\n\n\n\n\nKubernetes Cluster for the Hobbyist", 
            "title": "Kubernetes Bootcamp"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#kubernetes-bootcamp", 
            "text": "Duration  2days    Level  Intermediate, Advanced    Modules  10    Flipped Class  Yes    Customizable  Yes", 
            "title": "Kubernetes Bootcamp"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#objectives", 
            "text": "This course follows a hands on  workshop method and builds container orchestration skills  on top of existing skills learnt in Docker Fundamentals. Participants learn how to built a production grade resilient, self healing infrastructure  with kubernetes. They take the container images built earlier and deploy with the high availability, fault tolerance, scalablility provided by kubernetes.", 
            "title": "Objectives"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#flipped-classroom-methodology", 
            "text": "This course follows a  Flipped Classroom  methodology, a blended model where participants come prepared with understanding of concepts by going through video/online content. The class time is maximized to perform practical activities to apply the concepts learnt earlier. Practice activities include taking up a use case and solving it by applying the techniques, or performing nano projects etc.     To make it successful, participants need to be prepared in advance, by going through  the recommended pre class content to clear the concepts as well as by making sure their systems are prepared with all the software required, before the class. The pre class checklist given below can be handy for this purpose.", 
            "title": "Flipped Classroom Methodology"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#who-is-this-for", 
            "text": "This course is for someone who has already taken docker fundamentals course/has equivalent knowledge, and would like to learn how to extend it to  orchestrate container  deployments at production scale with kubernetes.  If you are a  Operations/Systems  personnel and would like to learn how scalable, fault tolerant and high available infrastructures are built on or off cloud to orchestrate container based deployments, this course it for you.  If you are a  developer  and would like to learn how to deploy your application stacks in production, on top of scalable, highly available  and leverage features provided by kubernetes, this course is for you.  If you are a  QA , and if your organization has a staging/QA environment built on kubernetes, and you would like to understand how to leverage it for setting up automated test workflow and learn the primitives offered by kubernetes, this course is for you.  You could be developer/operations personnel and be in charge of securing application infrastructure and setup auxiliary services such as  monitoring, centralized  logging etc. this course is for you.", 
            "title": "Who is this for ?"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#who-is-this-not-for", 
            "text": "If you are a  advanced user of Kubernetes  already, this course is definitely not for you.  If you are looking to start with Kubernetes concepts, this course is not for you as it assumes basic understanding of Kubernetes and COEs. There is a free resource  Kubernetes Quick Dive  which you should go through before attending this workshop.    If you are interested in learning docker/container orchestration on  windows , this course is not ideal for you as it focuses on linux containers.  If you expect to learn a technology which is mainly driven through a  GUI , this course is not suitable for you. Using kubernetes requires you to write YAML specifications, use command line tools etc.", 
            "title": "Who is this not for ?"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#what-will-you-do-as-part-of-this-course", 
            "text": "As part of this course you will,     Design a  scalable, resilient, secure  solution for deploying microservices application stack in production using primitives offered by kubernetes.  Install and configure a simple(non HA) multi node kubernetes cluster  with  kubeadm . You would also have a conceptual understanding of  how to build a production quality cluster with high availability, scalability,  redundancy and  security considerations.  Learn how applications from a micro services stack interconnect with  services  as well as expose public facing services with various options including nodeport, externalIP, ingress etc.  Achieve   Continuous Deployment  with different release strategies  such as  Zero Downtime, Blue/Green, Canary  etc.    Learn how to manage  persistent storage  in a kubernetes environment  Learn about the network primitives including  CNI  plugins, service networking and iptables, ingress etc.  Deploy an application which is auto scalable, high available, and resilient to failures.", 
            "title": "What will you do as part of this course ?"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#what-is-not-covered", 
            "text": "Even though this course covers many concepts related to kubernetes, since its a very vast topic, it still has the following areas uncovered.   Advanced RBAC  Cloud specific provisioning and integration  HA deployment of a kubernetes cluster with multi masters  In depth kubernetes administration  Writing Micro Services Applications  Alternate container runtimes e.g. rocker/rkt, runc", 
            "title": "What is not covered ?"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#pre-requisites", 
            "text": "Following are the pre requisite skills to attend this course. Since its a beginner level course, no prior experience with linux containers is assumed.", 
            "title": "Pre Requisites"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#courses", 
            "text": "You should have attended the following course, or have demonstrable knowledge with the topics included in the following course.   Docker Fundamentals   Pre Assessment test will be conducted at the beginning of the course to asses the skills.", 
            "title": "Courses"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#skills", 
            "text": "Docker Basics     Running Containers  Building Images and writing Dockerfiles  Docker Compose    Docker Networking and Storage    Linux/Unix Systems Fundamentals  Familiarity with Command Line Interface ( CLI )  Fundamental knowledge of editors on linux (any one of vi/nano/emacs)  Understanding of  YAML  syntax and familiarity with reading/writing basic YAML specifications", 
            "title": "Skills"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#hardware-and-software-requirements", 
            "text": "These are the prerequisites for each attendee.     Hardware Requirements  Software Requirements      Laptop/Desktop with high speed internet connection  Base Operating System : Windows / Mac OSX    8 GB RAM  VirtualBox    4 CPU Cores  Vagrant    20 GB Disk Space available  ConEmu (Windows Only)     Git for Windows (windows only)     Lab Setup : Instructions can be found at xxx", 
            "title": "Hardware and Software  Requirements"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#supporting-contentmaterials", 
            "text": "Following is the supporting material which will be provided to you before/during the course     Slides (online)    Workshop (online link)    Video Course - XXX by School of Devops", 
            "title": "Supporting Content/Materials"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#pre-class-checklist", 
            "text": "All participants should have completed the following checklist before attending the course .   Successfully Completed   Docker Fundamentals  Course, or have equivalent skills.  Verify  your system meets the  hardware pre requisites.  Validate the setup : verify all pre requisite software is installed on your system and is functional.  Join our  kubernetes channel on gitter", 
            "title": "Pre Class Checklist"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#topics", 
            "text": "Following are the topics which would be covered as part of this course. Detailed course outline follows.   Design Workshop:  Mapping Mogambo's Micro Services Architecture to Kubernetes  Design Workshop: Production grade Kubernetes Architecture design  Setup Kubernetes Cluster  Advanced Pod Scheduling  Publishing Applications with Services  Achieving Application High Availability and creating Release Strategies with Deployments  Adding configurations with ConfigMaps and Secrets  Auto Scaling with Horizontal Pod Autoscaler (HPA)  Storage and persistence  Adding security with Network Policies   Additional Topics if time permits\n  * Additional Controllers\n  * Centralized Log Management\n  * Cluster Maintenance", 
            "title": "Topics"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#detailed-course-outline", 
            "text": "This is the detailed course outline with day wise list of contents", 
            "title": "Detailed Course Outline"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#day-i", 
            "text": "", 
            "title": "Day I"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#introduction-and-assessment", 
            "text": "Trainer, Class and Course Introduction  Pre-Assessment Test  Formation of Groups: Group of 3/4 participants is formed. Each group\n  will collectively come up with the solutions design, which is then discussed\n  in the class, which is followed by the implementation of a common solution.", 
            "title": "Introduction and Assessment"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-1-design-workshop-mapping-mogambos-micro-services-architecture-to-kubernetes", 
            "text": "Introduction to the Use Case  Mogambo - The organization and the Application  Architecture and Problem Statement  Design Workshop  This is intended for the participants to come up with the strategy to deploy\nthe application stack described with Kubernetes. Participants would come up with\nthe structure of the code, map application deployment to kubernetes components e.g. deployments, services, ingress etc. and come up with the roadmap which is followed\nthrough rest of the workshop.", 
            "title": "Module 1:  Design Workshop - Mapping Mogambo's Micro Services Architecture to Kubernetes"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-2-design-workshop-production-grade-kubernetes-architecture", 
            "text": "Specification of the problem statement     Design Workshop: This is a design workshop where each group formed earlier comes\n  up with a sample design for a high available, fault tolerant, scalable and secure  kubernetes cluster using all the primitives they have learnt as part of the pre course exercise. This is followed by a quick discussion/review.", 
            "title": "Module 2: Design Workshop: Production grade Kubernetes Architecture"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-3-setup-and-configure-kubernetes-cluster", 
            "text": "Setup 2/3 nodes with VirtualBox/Vagrant/Cloud  Install kubernetes with kubeadm  CNI Overview  Network containers with  CNI using  weave/flannel/calico plugin  Configure kubectl admin client  Setup Kubernetes Dashboard  Overview of kubernetes configurations  Kubernetes RBAC overview - contexts, roles, serviceaccounts etc.  Setup a project/environment namespace and switch to it", 
            "title": "Module 3: Setup and configure kubernetes Cluster"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-4-advanced-pod-scheduling", 
            "text": "Defining node/pod affinity and anti affinity  Adding health checks  Why and how to define pod resource limits  Taints and tolerations", 
            "title": "Module 4: Advanced Pod Scheduling"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-5-publishing-applications-with-services", 
            "text": "Picking up the right type of a Service  Cluster IP and DNS    nodePort  externalIP  loadbalancer  headless services with Endpoints/ExternalNames    Labels and Selectors  Service API Specs  Types  Traffic Policy  Selector    Services vs Ingress  Creating service resources  for applications and backing services", 
            "title": "Module 5: Publishing Applications with Services"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-6-achieving-application-high-availability-and-creating-release-strategies-with-deployments", 
            "text": "Deployments and/vs Replication Controllers  Deployment API Specs    Defining replication specs    Defining Deployment Strategies  Rolling Update  Recreate  Batch Size    Deployment Operations  Describe  Rollouts  Rollbacks  Edit  Pause/Unpause    Additional Release Strategies  Canary Relases  Blue/Green Deployments", 
            "title": "Module 6: Achieving Application High Availability and creating Release Strategies with Deployments"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#day-ii", 
            "text": "", 
            "title": "Day II"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-7-adding-configurations-with-configmaps-and-secrets", 
            "text": "ConfigMaps and Secrets Specs  Injecting configurations as  Environment Variables  Files    Distributing sensitive data with secrets", 
            "title": "Module 7: Adding configurations with ConfigMaps and Secrets"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-8-auto-scaling-with-horizontal-pod-autoscaler-hpa", 
            "text": "Scaling deployments  manually  autoscaling    HPA Specs  Scaling metrics  default  custom    Setting up monitoring for kubernetes  heapster  influxdb  gragana    Creating autoscaling configs", 
            "title": "Module 8: Auto Scaling with Horizontal Pod Autoscaler (HPA)"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-9-storage-and-persistence", 
            "text": "Persistent Storage Concepts  Storage Drivers  PersistentVolumes  PersistentVolumeClaims  StorageClass    Setting up a database with persistent volume", 
            "title": "Module 9: Storage and Persistence"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#module-10-securing-with-network-policies", 
            "text": "Network Policy overview  Network policy specs  Defining network policy for the application stack", 
            "title": "Module 10: Securing with Network Policies"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#additional-topics-if-time-permits", 
            "text": "", 
            "title": "Additional Topics if time permits"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#advanced-controllers", 
            "text": "daemonSets  statefulSets  jobs  crons", 
            "title": "Advanced Controllers"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#centralized-logging", 
            "text": "Centralized logging for kubernetes  Setting up a ELK stack", 
            "title": "Centralized Logging"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#cluster-maintenance", 
            "text": "Cluster Upgrade  OS Upgrade  Backups and Restore", 
            "title": "Cluster Maintenance"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#badge-kubernetes-champion", 
            "text": "Successful completion of this course along with the project work and an assessment at the end of this course would qualify you to receive a Docker Champion badge by School of Devops. This badge is compliant with  Mozilla's Open Badge Standards  and can be added to your social profiles (e.g. LinkedIn) and is verifiable.  Example of a badge is as follows,", 
            "title": "Badge : Kubernetes Champion"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#reading-list", 
            "text": "Here is the list of curated resources which you could refer to to learn about docker before the training and  and get an in depth understanding post training.", 
            "title": "Reading List"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#youtube-resources", 
            "text": "Kubernetes Introduction by Kelsey Hightower  Life of a Packet", 
            "title": "Youtube Resources"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#video-courses", 
            "text": "Scalable Micro Services with Kubernetes  by Carter Morgan, Kelsey Hightower, Gundega Dekena", 
            "title": "Video Courses"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#safaribooks-online", 
            "text": "Kubernetes Up and Running - Kelsey Hightower", 
            "title": "Safaribooks Online"
        }, 
        {
            "location": "/containers/kubernetes-bootcamp/#tutorials", 
            "text": "Application Example Tutorials    Application Stack Examples    Official Kubernetes Bootcamp    Kubernetes in 10 mins    Kubernetes the Hard Way    Kubernetes Cluster for the Hobbyist", 
            "title": "Tutorials"
        }, 
        {
            "location": "/chef/chef-fundamentals-2days/", 
            "text": "Chef  Fundamentals\n\n\nLevel: Fundamentals\nDuration: 2 days\nType: Workshop\n\n\n\n\nObjective\n      Objective of this course is to introduce students to what Chef is, make them familiar with the core concepts, Master/Agent and Standalone modes, and help them get started writing Infrastructure as a code. This course also teaches how to integrate Chef  with AWS tools and manage complete lifecycle of cloud infrastructure.\n\n\nTarget Audience\n\n\nThis introductory course is targeted for the  devops professionals, experienced sysadmins   who want to understand what Chef is, how it is used, and how to use its primitives to  automate their own  infrastructure.   \n\n\nPrerequisites:\n\n\n\n\nBasic understanding of linux/unix system concepts\n\n\nFamiliarity with Command Line Interface (CLI)\n\n\nFamiliarity with a Text Editors\n\n\n\n\nSystem Requirements\n\n\n\n\nSpecified in a separate lab setup instructions document.\n\n\n\n\nCourse Outline\n\n High level overview of Chef, Recipes, Cookbooks, Runlists, Roles, Search\n\n Workstation Setup\n\n Knife Client\n\n Test Node/Client Setup\n\n Convergence\n\n Node Object\n\n Cookbooks, Recipes Resources\n\n Attributes and Templates\n\n Search\n\n Data Bags\n\n Roles\n\n Environments\n* Using Community Cookbooks\n\n\nDaywise Contents\n\n\nDay I\n* High level overview of Chef, Recipes, Cookbooks, Runlists, Roles, Search\n\n\n\n\nLearning Environment Setup\n\n\nCreating Hosted Chef Account\n\n\nKnife  Workstation Setup\n\n\nNode Creation\n\n\nBootstrapping Node\n\n\nNode Object\n\n\nCookbooks, Recipes Resources\n\n\nPackages, Cookbook Files, Services\n\n\nRun list\n\n\nChef Authentication Process\n\n\nValidation Key\n\n\nClient Key, Client configs\n\n\nResource Collection and Execution Phases\n\n\nAttributes and Templates\n\n\nCookbook Attributes\n\n\n\n\nDay II\n\n\n\n\nAttributes and Templates continued....\n\n\nERB Templates\n\n\nTemplate Variables\n\n\nCookbook Dependencies\n\n\nAttribute Precedence\n\n\nExecute Resource\n\n\nExecute resource to run ad hoc commands and scripts\n\n\nControlling Idempotence\n\n\n\n\n\n\nConditionals\n\n\nDependencies and Notifications\n\n\nCookbook Dependencies\n\n\nMetadata , Versioning\n\n\nSearch  Deep Dive\n\n\nLearning to use Search with Chef\n\n\nSearch Patterns\n\n\nData Bags\n\n\nData bags to store global data\n\n\nSearch and Databags\n\n\nWriting recipes to parse databags\n\n\nRoles\n\n\nRoles to Provide Abstraction\n\n\nGrouping together classes of servers with roles\n\n\nAttribute precedence levels and roles\n\n\nEnvironments\n\n\nEnvironments to provide isolation\n\n\nCookbook constraints\n\n\nEnvironment specific attributes\n\n\nUsing Community Cookbooks", 
            "title": "Chef Fundamentals"
        }, 
        {
            "location": "/chef/chef-fundamentals-2days/#chef-fundamentals", 
            "text": "Level: Fundamentals\nDuration: 2 days\nType: Workshop   Objective\n      Objective of this course is to introduce students to what Chef is, make them familiar with the core concepts, Master/Agent and Standalone modes, and help them get started writing Infrastructure as a code. This course also teaches how to integrate Chef  with AWS tools and manage complete lifecycle of cloud infrastructure.  Target Audience  This introductory course is targeted for the  devops professionals, experienced sysadmins   who want to understand what Chef is, how it is used, and how to use its primitives to  automate their own  infrastructure.     Prerequisites:   Basic understanding of linux/unix system concepts  Familiarity with Command Line Interface (CLI)  Familiarity with a Text Editors   System Requirements   Specified in a separate lab setup instructions document.   Course Outline  High level overview of Chef, Recipes, Cookbooks, Runlists, Roles, Search  Workstation Setup  Knife Client  Test Node/Client Setup  Convergence  Node Object  Cookbooks, Recipes Resources  Attributes and Templates  Search  Data Bags  Roles  Environments\n* Using Community Cookbooks  Daywise Contents  Day I\n* High level overview of Chef, Recipes, Cookbooks, Runlists, Roles, Search   Learning Environment Setup  Creating Hosted Chef Account  Knife  Workstation Setup  Node Creation  Bootstrapping Node  Node Object  Cookbooks, Recipes Resources  Packages, Cookbook Files, Services  Run list  Chef Authentication Process  Validation Key  Client Key, Client configs  Resource Collection and Execution Phases  Attributes and Templates  Cookbook Attributes   Day II   Attributes and Templates continued....  ERB Templates  Template Variables  Cookbook Dependencies  Attribute Precedence  Execute Resource  Execute resource to run ad hoc commands and scripts  Controlling Idempotence    Conditionals  Dependencies and Notifications  Cookbook Dependencies  Metadata , Versioning  Search  Deep Dive  Learning to use Search with Chef  Search Patterns  Data Bags  Data bags to store global data  Search and Databags  Writing recipes to parse databags  Roles  Roles to Provide Abstraction  Grouping together classes of servers with roles  Attribute precedence levels and roles  Environments  Environments to provide isolation  Cookbook constraints  Environment specific attributes  Using Community Cookbooks", 
            "title": "Chef  Fundamentals"
        }
    ]
}